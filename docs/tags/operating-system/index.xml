<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>operating system on Research Team</title>
    <link>https://sdt-research-team.github.io/tags/operating-system/</link>
    <description>Recent content in operating system on Research Team</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 14 Jan 2021 09:57:01 +0700</lastBuildDate><atom:link href="https://sdt-research-team.github.io/tags/operating-system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go Concurrency</title>
      <link>https://sdt-research-team.github.io/posts/go-concurrency/</link>
      <pubDate>Thu, 14 Jan 2021 09:57:01 +0700</pubDate>
      
      <guid>https://sdt-research-team.github.io/posts/go-concurrency/</guid>
      <description>Table of content General
Goroutine
Wait group
Channel
Worker pool
Rate limit
References
General  If there&amp;rsquo;s one thing most people know about Go, is that it is designed for concurrency (1).
&amp;ndash; Andrew Gerrand &amp;ndash; concurrency and parallelism Concurrency is the ability of a computer to deal with multiple things at once. And, concept of running multiple things in parallel known as parallelism
 Concurrent program Today, modern systems are fast because they are using multiple cores.</description>
    </item>
    
  </channel>
</rss>
